[{"id":"e7229a116efe1ef1","type":"subflow","name":"Tag Formatter","info":"","category":"","in":[{"x":60,"y":160,"wires":[{"id":"310130e73f5ea542"}]}],"out":[{"x":780,"y":120,"wires":[{"id":"a6f82a2c6c916d7b","port":0}]}],"env":[{"name":"TopicName","type":"str","value":""}],"meta":{},"color":"#DDAA99"},{"id":"310130e73f5ea542","type":"function","z":"e7229a116efe1ef1","name":"TagFormatter","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = global.get(\"NameIDMap\");      //global defined in \"Name - ID zuordenen\"\nlet idNameMap = global.get(\"IDNameMap\");      //global defined in \"Name - ID zuordenen\"\nlet idValueMap = global.get(\"IDValueMap\");    //global defined in \"Name - ID zuordenen\", changed here with every message\nlet oldValues = global.get(\"oldValues\");      //global defined in \"Name - ID zuordenen\", changed here when parameters changed\nlet timestampMapObject = global.get(\"timestampMapObject\");\nlet new_message;\n\n//Variables for writing changes of the parameters to the form\nlet iterator = idValueMap.keys()\nlet id;\n\n/*################################# \n    Parse payload and store id and value to the idValueMap\n#################################*/  \n\n\n//{\n//  \"Tagname\": \"V0760=T405=EG001_1_STAT\",\n//  \"Value\": 2,\n//  \"Timestamp\": \"2024-03-01T12:06:44.9870472Z\"\n//}\n\nvar message;\nvar payload=[];\nlet m= msg.payload;\nlet timestamp;\nif(m.vals != undefined)\n{\n    //write the recieved Values into the Map (key = id)\n    m.vals.forEach(value => {\n        idValueMap.set(value.id, value.val);\n        new_message =\n        {\n            \"Tagname\": idNameMap.get(value.id),\n            \"Value\": value.val,\n            \"Timestamp\": value.ts\n        }\n        payload.push(new_message)\n        \n    });\n     \n}\nmsg.topic = env.get(\"TopicName\");\nmsg.payload = payload;\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"IDValueMap\", idValueMap);\nglobal.set(\"timestampMapObject\", timestampMapObject);\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":160,"wires":[["56a94bd1fa1d95d1","a6f82a2c6c916d7b"]]},{"id":"56a94bd1fa1d95d1","type":"debug","z":"e7229a116efe1ef1","name":"TagFormatter","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":220,"wires":[]},{"id":"a6f82a2c6c916d7b","type":"split","z":"e7229a116efe1ef1","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":450,"y":120,"wires":[["d1b42bd30fbbaa82"]]},{"id":"d1b42bd30fbbaa82","type":"debug","z":"e7229a116efe1ef1","name":"single messages","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":630,"y":80,"wires":[]},{"id":"43c71832b73f50fd","type":"subflow","name":"Tag Metadata","info":"","category":"","in":[{"x":60,"y":80,"wires":[{"id":"82ecad0b0e8e16d9"}]}],"out":[{"x":720,"y":160,"wires":[{"id":"ec377f8c3a8855de","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"2f6c94402516b256","type":"debug","z":"43c71832b73f50fd","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":710,"y":80,"wires":[]},{"id":"ec377f8c3a8855de","type":"function","z":"43c71832b73f50fd","name":"Init Global Variables","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = global.get(\"NameIDMap\");\nlet idValueMap = new Map();         \nlet oldValues = new Map();          \nlet timestampMapObject = {};\n/*################################# \n    set default values for the form \n#################################*/\n\n/*################################# \n    update global maps\n#################################*/\nglobal.set(\"IDValueMap\", idValueMap);\nglobal.set(\"oldValues\", oldValues);\nglobal.set(\"timestampMapObject\", timestampMapObject);\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":500,"y":80,"wires":[["2f6c94402516b256"]]},{"id":"82ecad0b0e8e16d9","type":"function","z":"43c71832b73f50fd","name":"Parse Metadata","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = new Map();          //global only changed here\nlet idNameMap = new Map();          //global only changed here\nlet connectionName = \"osmartest\"; // Name of the connection\n\n\n/*################################# \n    Check Payload\n#################################*/\nlet m = msg.payload;\nif (m.seq == undefined) {\n    return null;\n} \n\n\n/*################################# \n    Parse payload and store name and id to the NameIDMap\n#################################*/    \n\n// Iterate through connections\nm.connections.forEach(connection => \n{\n    if ((connection.name == connectionName)) {\n        let dataPoints = connection.dataPoints;\n\n        //  Iterate through dataPoints\n        dataPoints.forEach( dataPoint => {\n            let dataPointDefinitions = dataPoint.dataPointDefinitions;\n\n            // Iterate through dataPointDefinitions\n            dataPointDefinitions.forEach(dataPointDefinition => {\n                nameIDMap.set(dataPointDefinition.name, dataPointDefinition.id);\n                idNameMap.set(dataPointDefinition.id, dataPointDefinition.name);\n            });\n        });\n    }\n});\n\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"NameIDMap\", nameIDMap);\nglobal.set(\"IDNameMap\", idNameMap);\n\n\nreturn msg;\n\n\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":220,"y":80,"wires":[["ec377f8c3a8855de"]]},{"id":"9166d3d92f6d5101","type":"tab","label":"PI Data Preparation","disabled":false,"info":"","env":[]},{"id":"47d772408fdf09a7","type":"mqtt in","z":"9166d3d92f6d5101","name":"","topic":"ie/m/#","qos":"2","datatype":"json","broker":"9dcabf096a552624","nl":false,"rap":false,"inputs":0,"x":270,"y":140,"wires":[["f5ce8c7957677f16"]]},{"id":"5aae8da929053f50","type":"mqtt in","z":"9166d3d92f6d5101","name":"","topic":"ie/d/#","qos":"2","datatype":"auto-detect","broker":"9dcabf096a552624","nl":false,"rap":true,"rh":0,"inputs":0,"x":270,"y":300,"wires":[["fd42ccdd701d11c9"]]},{"id":"f5ce8c7957677f16","type":"subflow:43c71832b73f50fd","z":"9166d3d92f6d5101","name":"","x":520,"y":140,"wires":[["07392b6095b21489"]]},{"id":"0966b9c8bbe942d6","type":"mqtt out","z":"9166d3d92f6d5101","name":"","topic":"","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"9dcabf096a552624","x":690,"y":300,"wires":[]},{"id":"fd42ccdd701d11c9","type":"subflow:e7229a116efe1ef1","z":"9166d3d92f6d5101","name":"","env":[{"name":"TopicName","value":"ie/kafka/pidata","type":"str"}],"x":520,"y":300,"wires":[["0966b9c8bbe942d6","8923d00f51bb88a2"]]},{"id":"8923d00f51bb88a2","type":"debug","z":"9166d3d92f6d5101","name":"single Messages","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":730,"y":380,"wires":[]},{"id":"07392b6095b21489","type":"debug","z":"9166d3d92f6d5101","name":"Tag Metadata","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":710,"y":180,"wires":[]},{"id":"9dcabf096a552624","type":"mqtt-broker","name":"ie-databus","broker":"ie-databus","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""}]